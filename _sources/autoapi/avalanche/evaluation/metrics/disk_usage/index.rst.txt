:mod:`avalanche.evaluation.metrics.disk_usage`
==============================================

.. py:module:: avalanche.evaluation.metrics.disk_usage


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.evaluation.metrics.disk_usage.DiskUsage
   avalanche.evaluation.metrics.disk_usage.MinibatchDiskUsage
   avalanche.evaluation.metrics.disk_usage.EpochDiskUsage
   avalanche.evaluation.metrics.disk_usage.ExperienceDiskUsage
   avalanche.evaluation.metrics.disk_usage.StreamDiskUsage



Functions
~~~~~~~~~

.. autoapisummary::

   avalanche.evaluation.metrics.disk_usage.disk_usage_metrics


.. py:class:: DiskUsage(paths_to_monitor: Union[PathAlike, Sequence[PathAlike]] = None)

   Bases: :class:`Metric[float]`

   The standalone disk usage metric.

   This metric can be used to monitor the size of a set of directories.
   e.g. This can be useful to monitor the size of a replay buffer,

   Creates an instance of the standalone disk usage metric.

   The `result` method will return the sum of the size
   of the directories specified as the first parameter in KiloBytes.

   :param paths_to_monitor: a path or a list of paths to monitor. If None,
       the current working directory is used. Defaults to None.

   .. method:: update(self)

      Updates the disk usage statistics.

      :return None.


   .. method:: result(self) -> Optional[float]

      Retrieves the disk usage as computed during the last call to the
      `update` method.

      Calling this method will not change the internal state of the metric.

      :return: The disk usage or None if `update` was not invoked yet.


   .. method:: reset(self) -> None

      Resets the metric.

      :return: None.


   .. method:: get_dir_size(path: str)
      :staticmethod:



.. py:class:: MinibatchDiskUsage(paths_to_monitor)

   Bases: :class:`avalanche.evaluation.metrics.disk_usage.DiskPluginMetric`

   The minibatch Disk usage metric.
   This plugin metric only works at training time.

   At the end of each iteration, this metric logs the total
   size (in KB) of all the monitored paths.

   If a more coarse-grained logging is needed, consider using
   :class:`EpochDiskUsage`.

   Creates an instance of the minibatch Disk usage metric.

   .. method:: __str__(self)



.. py:class:: EpochDiskUsage(paths_to_monitor)

   Bases: :class:`avalanche.evaluation.metrics.disk_usage.DiskPluginMetric`

   The Epoch Disk usage metric.
   This plugin metric only works at training time.

   At the end of each epoch, this metric logs the total
   size (in KB) of all the monitored paths.

   Creates an instance of the epoch Disk usage metric.

   .. method:: __str__(self)



.. py:class:: ExperienceDiskUsage(paths_to_monitor)

   Bases: :class:`avalanche.evaluation.metrics.disk_usage.DiskPluginMetric`

   The average experience Disk usage metric.
   This plugin metric works only at eval time.

   At the end of each experience, this metric logs the total
   size (in KB) of all the monitored paths.

   Creates an instance of the experience Disk usage metric.

   .. method:: __str__(self)



.. py:class:: StreamDiskUsage(paths_to_monitor)

   Bases: :class:`avalanche.evaluation.metrics.disk_usage.DiskPluginMetric`

   The average stream Disk usage metric.
   This plugin metric works only at eval time.

   At the end of the eval stream, this metric logs the total
   size (in KB) of all the monitored paths.

   Creates an instance of the stream Disk usage metric.

   .. method:: __str__(self)



.. function:: disk_usage_metrics(*, paths_to_monitor=None, minibatch=False, epoch=False, experience=False, stream=False) -> List[PluginMetric]

   Helper method that can be used to obtain the desired set of
   standalone metrics.

   :param minibatch: If True, will return a metric able to log the minibatch
       Disk usage
   :param epoch: If True, will return a metric able to log the epoch
       Disk usage
   :param experience: If True, will return a metric able to log the experience
       Disk usage.
   :param stream: If True, will return a metric able to log the evaluation
       stream Disk usage.

   :return: A list of plugin metrics.


