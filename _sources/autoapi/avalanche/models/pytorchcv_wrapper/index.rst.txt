:mod:`avalanche.models.pytorchcv_wrapper`
=========================================

.. py:module:: avalanche.models.pytorchcv_wrapper

.. autoapi-nested-parse::

   This module provides acces to pytorchcv models. A general wrapper is available
   through get_model. For VGG, Resnet, DenseNet and Pyramidnet direct wrappers are
   provided.

   Models pretrained on e.g. Imagenet don't necessairly have the same structure
   as those used typically used for smaller datasets like Cifar10. So be carefull
   when adapting pretrained models for different datasets.

   Not all options (e.g. growth rate for densenet, alpha in pyramidnet,
   bottlenecks...) are available through the direct wrappers. If a more specific
   models is required, it can be loaded through the general method.

   Currently this module only wraps to pytorchcv models.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   avalanche.models.pytorchcv_wrapper.vgg
   avalanche.models.pytorchcv_wrapper.resnet
   avalanche.models.pytorchcv_wrapper.densenet
   avalanche.models.pytorchcv_wrapper.pyramidnet
   avalanche.models.pytorchcv_wrapper.get_model


.. function:: vgg(depth: int, batch_normalization=False, pretrained=False) -> Module

   Wrapper for VGG net of verious depths availble in the pytorchcv package.
   VGG is only availabe for imagenet.

   :param depth: Depth of the model, one of (11, 13, 16, 19)
   :param batch_normalization: include batch normalizaion layers
   :param pretrained: loads model pretrained on imagnet


.. function:: resnet(dataset: str, depth: int, pretrained=False) -> Module

   Wrapper for (basic) renset available in the pytorchcv package. More variants
   are availble through the general wrapper.

   :param dataset: One of cifar10, cifar100, svhn, imagenet.
   :param depth: depth of the architecture, one of (10, 12, 14, 16, 18, 26, 34,
                 50, 101, 152, 200) for imagenet,
                 (20, 56, 110, 1001, 1202) for the other datasets.
   :param pretrained: loads model pretrained on `dataset`.


.. function:: densenet(dataset: str, depth: int, pretrained=False) -> Module

   Wrapper for densenet available in the pytorchcv package.

   :param dataset: One of cifar10, cifar100, svhn, imagenet.
   :param depth: The depth of the densnet. For imagenet depths
                 (121, 161, 169, 201) are supported. The other datasets
                  support dephts (40, 100).
   :param pretrained: load model pretrained on `dataset`..


.. function:: pyramidnet(dataset: str, depth: int, pretrained=False) -> Module

   Wrapper for pyramidnet available in the pytorchcv package.

   :param dataset: One of cifar10, cifar100, svhn, imagenet.
   :param depth: The depth of the pyramidnet. For imagenet 101 is supported.
                 The other datasets support dephts (110, 164, 200, 236, 272).
   :param pretrained: load model pretrained on `dataset`..


.. function:: get_model(name: str, pretrained=False)

   This a direct wrapper to the model getter of `pytorchcv`. For available
   models see: https://github.com/osmr/imgclsmob


