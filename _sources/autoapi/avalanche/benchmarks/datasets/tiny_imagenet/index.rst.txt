:mod:`avalanche.benchmarks.datasets.tiny_imagenet`
==================================================

.. py:module:: avalanche.benchmarks.datasets.tiny_imagenet


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   tiny_imagenet/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.benchmarks.datasets.tiny_imagenet.TinyImagenet



.. py:class:: TinyImagenet(root: Union[str, Path] = get_default_dataset_location('tinyimagenet'), *, train: bool = True, transform=None, target_transform=None, loader=default_loader, download=True)

   Bases: :class:`avalanche.benchmarks.datasets.SimpleDownloadableDataset`

   Tiny Imagenet Pytorch Dataset

   Creates an instance of the Tiny Imagenet dataset.

   :param root: folder in which to download dataset.
   :param train: True for training set, False for test set.
   :param transform: Pytorch transformation function for x.
   :param target_transform: Pytorch transformation function for y.
   :param loader: the procedure to load the instance from the storage.
   :param bool download: If True, the dataset will be  downloaded if
       needed.

   .. attribute:: filename
      :annotation: = ['tiny-imagenet-200.zip', 'http://cs231n.stanford.edu/tiny-imagenet-200.zip']

      

   .. attribute:: md5
      :annotation: = 90528d7ca1a48142e341f4ef8d21d0de

      

   .. method:: labels2dict(data_folder: Path)
      :staticmethod:

      Returns dictionaries to convert class names into progressive ids
      and viceversa.

      :param data_folder: The root path of tiny imagenet
      :returns: label2id, id2label: two Python dictionaries.


   .. method:: load_data(self)

      Load all images paths and targets.

      :return: train_set, test_set: (train_X_paths, train_y).


   .. method:: get_train_images_paths(self, class_name)

      Gets the training set image paths.

      :param class_name: names of the classes of the images to be
          collected.
      :returns img_paths: list of strings (paths)


   .. method:: get_test_images_paths(self, class_name)

      Gets the test set image paths

      :param class_name: names of the classes of the images to be
          collected.
      :returns img_paths: list of strings (paths)


   .. method:: __len__(self)

      Returns the length of the set 


   .. method:: __getitem__(self, index)

      Returns the index-th x, y pattern of the set 



