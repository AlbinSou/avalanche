:mod:`avalanche.benchmarks.datasets.core50`
===========================================

.. py:module:: avalanche.benchmarks.datasets.core50


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   core50/index.rst
   core50_data/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.benchmarks.datasets.core50.CORe50Dataset



.. py:class:: CORe50Dataset(root: Union[str, Path] = None, *, train=True, transform=None, target_transform=None, loader=default_loader, download=True, mini=False, object_level=True)

   Bases: :class:`avalanche.benchmarks.datasets.downloadable_dataset.DownloadableDataset`

   CORe50 Pytorch Dataset 

   Creates an instance of the CORe50 dataset.

   :param root: root for the datasets data. Defaults to None, which means
   that the default location for 'core50' will be used.
   :param train: train or test split.
   :param transform: eventual transformations to be applied.
   :param target_transform: eventual transformation to be applied to the
       targets.
   :param loader: the procedure to load the instance from the storage.
   :param download: boolean to automatically download data. Default to
       True.
   :param mini: boolean to use the 32x32 version instead of the 128x128.
       Default to False.
   :param object_level: if the classification is objects based or
       category based: 50 or 10 way classification problem. Default to True
       (50-way object classification problem)

   .. method:: __getitem__(self, index)

      Args:
          index (int): Index

      Returns:
          tuple: (sample, target) where target is class_index of the target
              class.


   .. method:: __len__(self)



