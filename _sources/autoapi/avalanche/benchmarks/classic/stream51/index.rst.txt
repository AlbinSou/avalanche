:mod:`avalanche.benchmarks.classic.stream51`
============================================

.. py:module:: avalanche.benchmarks.classic.stream51


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.benchmarks.classic.stream51.Stream51



.. py:class:: Stream51(root: Union[str, Path] = None, *, train=True, transform=None, target_transform=None, loader=default_loader, download=True)

   Bases: :class:`avalanche.benchmarks.datasets.DownloadableDataset`

   Stream-51 Pytorch Dataset 

   Creates an instance of the Stream-51 dataset.

   :param root: The directory where the dataset can be found or downloaded.
       Defaults to None, which means that the default location for
       'stream51' will be used.
   :param train: If True, the training set will be returned. If False,
       the test set will be returned.
   :param transform: The transformations to apply to the X values.
   :param target_transform: The transformations to apply to the Y values.
   :param loader: The image loader to use.
   :param download: If True, the dataset will be downloaded if needed.

   .. method:: make_dataset(data_list, ordering='class_instance', seed=666)
      :staticmethod:

      data_list
      for train: [class_id, clip_num, video_num, frame_num, bbox, file_loc]
      for test: [class_id, bbox, file_loc]


   .. method:: __getitem__(self, index)

      Args:
          index (int): Index

      Returns:
          tuple: (sample, target) where target is class_index of the target
          class.


   .. method:: __len__(self)


   .. method:: __repr__(self)

      Return repr(self).



